plugins {
    id 'org.springframework.boot' version '2.6.12'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" // qudrydsl 플러그인
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    queryDslVersion = "5.0.0"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.1'

    runtimeOnly 'com.h2database:h2'

    //querydsl - 버전을 명시해야 한다 (하지않으면 QClass가 생성되지 않는다)
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    // web
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

//// querydsl 추가 시작

// QClass 위치 지정
def querydslDir = "src/main/generated/querydsl"

// JPA 사용여부, QClass 위치 지정
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

// build 시 사용할 SourceSet
sourceSets {
    main.java.srcDir querydslDir
}

// querydsl 이 compileClasspath 를 상속하도록 설정 (?)
configurations {
    querydsl.extendsFrom compileClasspath
}

// querydsl 컴파일 시 사용할 옵션 설정
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//// querydsl 추가 끝